name: Build and Release

on:
  push:
    tags:
      - 'v*' 
    branches:
      - main 

permissions:
  contents: write 

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            output_name: ProjectManager.exe
            asset_name: ProjectManager-windows.exe
          - os: macos-latest
            output_name: ProjectManager
            asset_name: ProjectManager-macos
          - os: ubuntu-latest
            output_name: ProjectManager
            asset_name: ProjectManager-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1' 

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      - name: Build application
        run: go build -v -o ${{ matrix.output_name }} ./cmd/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.output_name }}
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: find . -type f | sort

      - name: Prepare release files
        run: |
          mkdir -p release
          cp ProjectManager-windows.exe/ProjectManager.exe release/ProjectManager-windows.exe
          cp ProjectManager-macos/ProjectManager release/ProjectManager-macos
          cp ProjectManager-linux/ProjectManager release/ProjectManager-linux
          chmod +x release/ProjectManager-macos release/ProjectManager-linux
          ls -la release/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true